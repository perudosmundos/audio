import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª pattern
const cyrillicPattern = /[\u0400-\u04FF]/g;

const localesDir = path.join(__dirname, 'src/lib/locales');
const files = fs.readdirSync(localesDir).filter(f => f.endsWith('.json'));

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ù–ê –†–£–°–°–ö–ò–ï –°–õ–û–í–ê –í –î–†–£–ì–ò–• –Ø–ó–´–ö–ê–•\n');
console.log('‚ïê'.repeat(70));

let totalIssues = 0;

files.forEach(file => {
  const filePath = path.join(localesDir, file);
  const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
  
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
  if (file === 'ru.json') {
    console.log(`\n‚úÖ ${file} - –†–£–°–°–ö–ò–ô (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º)`);
    return;
  }
  
  const issues = [];
  
  function checkObject(obj, prefix = '') {
    Object.entries(obj).forEach(([key, value]) => {
      const fullKey = prefix ? `${prefix}.${key}` : key;
      
      if (typeof value === 'string') {
        const cyrillicMatches = value.match(cyrillicPattern);
        if (cyrillicMatches) {
          issues.push({
            key: fullKey,
            value: value,
            count: cyrillicMatches.length
          });
        }
      } else if (typeof value === 'object' && value !== null) {
        checkObject(value, fullKey);
      }
    });
  }
  
  checkObject(data);
  
  if (issues.length === 0) {
    console.log(`\n‚úÖ ${file} - –û–ö (—Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ)`);
  } else {
    console.log(`\n‚ùå ${file} - –ù–ê–ô–î–ï–ù–û ${issues.length} –ø—Ä–æ–±–ª–µ–º:`);
    issues.slice(0, 5).forEach(issue => {
      console.log(`   ‚Ä¢ ${issue.key}`);
      console.log(`     –ó–Ω–∞—á–µ–Ω–∏–µ: "${issue.value}"`);
    });
    if (issues.length > 5) {
      console.log(`   ... –∏ –µ—â–µ ${issues.length - 5} –ø—Ä–æ–±–ª–µ–º`);
    }
    totalIssues += issues.length;
  }
});

console.log('\n' + '‚ïê'.repeat(70));
if (totalIssues === 0) {
  console.log('‚úÖ –í–°–ï –Ø–ó–´–ö–ò –ß–ò–°–¢–´–ï - –†–£–°–°–ö–ò–• –°–õ–û–í –ù–ï –ù–ê–ô–î–ï–ù–û!');
} else {
  console.log(`‚ùå –ù–ê–ô–î–ï–ù–û –í–°–ï–ì–û: ${totalIssues} –ø—Ä–æ–±–ª–µ–º —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º`);
}
console.log('‚ïê'.repeat(70));
