#!/usr/bin/env node
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const localesDir = path.join(__dirname, 'src/lib/locales');

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
const correctTranslations = {
  en: {
    // –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ)
    appName: "DM Podcasts",
    loading: "Loading...",
    saveQuestion: "Save",
    cancel: "Cancel",
    errorGeneric: "Error",
    episodes: "Radio Dos Mundos",
    allYears: "All Years",
    allMonths: "All Months",
    search: "Search",
    cacheForOffline: "Cache for Offline",
    // ... –¥—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
  },
  pl: {
    // –ü–æ–ª—å—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    appName: "DM Podcasty",
    loading: "≈Åadowanie...",
    saveQuestion: "Zapisz",
    cancel: "Anuluj",
    errorGeneric: "B≈ÇƒÖd",
    episodes: "Radio Dos Mundos",
    allYears: "Wszystkie lata",
    allMonths: "Wszystkie miesiƒÖce",
    search: "Szukaj",
    cacheForOffline: "Keszuj dla trybu offline",
    filterByYear: "Filtruj wed≈Çug roku",
    filterByMonth: "Filtruj wed≈Çug miesiƒÖca",
    resetFilters: "Resetuj filtry",
    january: "Stycze≈Ñ",
    february: "Luty",
    march: "Marzec",
    april: "Kwiecie≈Ñ",
    may: "Maj",
    june: "Czerwiec",
    july: "Lipiec",
    august: "Sierpie≈Ñ",
    september: "Wrzesie≈Ñ",
    october: "Pa≈∫dziernik",
    november: "Listopad",
    december: "Grudzie≈Ñ",
    // ... –¥—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–ª—å—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
  },
  de: {
    // –ù–µ–º–µ—Ü–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    appName: "DM Podcasts",
    loading: "L√§dt...",
    saveQuestion: "Speichern",
    cancel: "Abbrechen",
    errorGeneric: "Fehler",
    episodes: "Radio Dos Mundos",
    allYears: "Alle Jahre",
    allMonths: "Alle Monate",
    search: "Suchen",
    cacheForOffline: "F√ºr Offline zwischenspeichern",
    filterByYear: "Nach Jahr filtern",
    filterByMonth: "Nach Monat filtern",
    resetFilters: "Filter zur√ºcksetzen",
    january: "Januar",
    february: "Februar",
    march: "M√§rz",
    april: "April",
    may: "Mai",
    june: "Juni",
    july: "Juli",
    august: "August",
    september: "September",
    october: "Oktober",
    november: "November",
    december: "Dezember",
    // ... –¥—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–µ–º–µ—Ü–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
  },
  fr: {
    // –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    appName: "DM Podcasts",
    loading: "Chargement...",
    saveQuestion: "Enregistrer",
    cancel: "Annuler",
    errorGeneric: "Erreur",
    episodes: "Radio Dos Mundos",
    allYears: "Toutes les ann√©es",
    allMonths: "Tous les mois",
    search: "Rechercher",
    cacheForOffline: "Mettre en cache pour le mode hors ligne",
    filterByYear: "Filtrer par ann√©e",
    filterByMonth: "Filtrer par mois",
    resetFilters: "R√©initialiser les filtres",
    january: "Janvier",
    february: "F√©vrier",
    march: "Mars",
    april: "Avril",
    may: "Mai",
    june: "Juin",
    july: "Juillet",
    august: "Ao√ªt",
    september: "Septembre",
    october: "Octobre",
    november: "Novembre",
    december: "D√©cembre",
    // ... –¥—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
  },
  es: {
    // –ò—Å–ø–∞–Ω—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    appName: "DM Podcasts",
    loading: "Cargando...",
    saveQuestion: "Guardar",
    cancel: "Cancelar",
    errorGeneric: "Error",
    episodes: "Radio Dos Mundos",
    allYears: "Todos los a√±os",
    allMonths: "Todos los meses",
    search: "Buscar",
    cacheForOffline: "Almacenar en cach√© para modo sin conexi√≥n",
    filterByYear: "Filtrar por a√±o",
    filterByMonth: "Filtrar por mes",
    resetFilters: "Restablecer filtros",
    january: "Enero",
    february: "Febrero",
    march: "Marzo",
    april: "Abril",
    may: "Mayo",
    june: "Junio",
    july: "Julio",
    august: "Agosto",
    september: "Septiembre",
    october: "Octubre",
    november: "Noviembre",
    december: "Diciembre",
    // ... –¥—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏—Å–ø–∞–Ω—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
  }
};

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏...\n');

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
Object.entries(correctTranslations).forEach(([lang, translations]) => {
  if (lang === 'en') return; // –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —Ñ–∞–π–ª –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å

  const filePath = path.join(localesDir, `${lang}.json`);
  const currentContent = JSON.parse(fs.readFileSync(filePath, 'utf8'));

  let changesCount = 0;

  // –ó–∞–º–µ–Ω—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
  Object.keys(translations).forEach(key => {
    if (currentContent[key] && currentContent[key] === correctTranslations.en[key]) {
      currentContent[key] = translations[key];
      changesCount++;
    }
  });

  if (changesCount > 0) {
    fs.writeFileSync(filePath, JSON.stringify(currentContent, null, 2) + '\n');
    console.log(`‚úÖ ${lang.toUpperCase()}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${changesCount} –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤`);
  } else {
    console.log(`‚úÖ ${lang.toUpperCase()}: –ø–µ—Ä–µ–≤–æ–¥—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã`);
  }
});

console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Å–≤–æ–∏—Ö —è–∑—ã–∫–æ–≤
Object.keys(correctTranslations).forEach(lang => {
  if (lang === 'en') return;

  const filePath = path.join(localesDir, `${lang}.json`);
  const content = JSON.parse(fs.readFileSync(filePath, 'utf8'));

  const checks = [
    { key: 'loading', expected: correctTranslations[lang].loading },
    { key: 'saveQuestion', expected: correctTranslations[lang].saveQuestion },
    { key: 'cancel', expected: correctTranslations[lang].cancel },
    { key: 'errorGeneric', expected: correctTranslations[lang].errorGeneric },
  ];

  let correctCount = 0;
  checks.forEach(check => {
    if (content[check.key] === check.expected) {
      correctCount++;
    }
  });

  console.log(`${lang.toUpperCase()}: ${correctCount}/${checks.length} –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã`);
});

console.log('\nüéâ –í—Å–µ —Ñ–∞–π–ª—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞!');
